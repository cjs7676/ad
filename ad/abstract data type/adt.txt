Creating tables with ADT and References

CREATE TABLE Customer (
CustNo NUMBER NOT NULL,
CustName VARCHAR2(200) NOT NULL,
Street VARCHAR2(200) NOT NULL,
City VARCHAR2(200) NOT NULL,
State CHAR(2) NOT NULL,
Zip VARCHAR2(20) NOT NULL,
Phone1 VARCHAR2(20),
Phone2 VARCHAR2(20),
Phone3 VARCHAR2(20),
PRIMARY KEY (CustNo));



CREATE TABLE PurchaseOrder (
PONo NUMBER,
Custno NUMBER references Customer,
OrderDate DATE,
ShipDate DATE,
ToStreet VARCHAR2(200),
ToCity VARCHAR2(200),
ToState CHAR(2),
ToZip VARCHAR2(20),
PRIMARY KEY(PONo));



CREATE TABLE Stock (
StockNo NUMBER PRIMARY KEY,
Price NUMBER,
TaxRate NUMBER);



CREATE TABLE LineItems (
LineItemNo NUMBER,
PONo NUMBER REFERENCES PurchaseOrder,
StockNo NUMBER REFERENCES Stock_reltab,
Quantity NUMBER,
Discount NUMBER,
PRIMARY KEY (PONo, LineItemNo));


Inserting data into tables with ADT and references

INSERT INTO Stock VALUES(1004, 6750.00, 2);
INSERT INTO Stock VALUES(1011, 4500.23, 2);
INSERT INTO Stock VALUES(1534, 2234.00, 2);
INSERT INTO Stock VALUES(1535, 3456.23, 2);



INSERT INTO Customer VALUES (1, 'Jean Nance', '2 Avocet Drive','Redwood Shores', 'CA', '95054','415-555-1212', NULL, NULL);

INSERT INTO Customer VALUES (2, 'John Nike', '323 College Drive','Edison', 'NJ', '08820','609-555-1212', '201-555-1212', NULL);

INSERT INTO PurchaseOrder VALUES (1001, 1, SYSDATE, '10-MAY-1997',NULL, NULL, NULL, NULL);

INSERT INTO PurchaseOrder VALUES (2001, 2, SYSDATE, '20-MAY-1997','55 Madison Ave', 'Madison', 'WI', '53715');

INSERT INTO LineItems VALUES(01, 1001, 1534, 12, 0);
INSERT INTO LineItems VALUES(02, 1001, 1535, 10, 10);
INSERT INTO LineItems VALUES(01, 2001, 1004, 1, 0);
INSERT INTO LineItems VALUES(02, 2001, 1011, 2, 1);





simple query on table
Getting all data from customer,purchaseorder and lineitems using simple join

SELECT C.CustNo, C.CustName, C.Street, C.City, C.State,
C.Zip, C.phone1, C.phone2, C.phone3,
P.PONo, P.OrderDate,
L.StockNo, L.LineItemNo, L.Quantity, L.Discount
FROM Customer C,
PurchaseOrder P,
LineItems L
WHERE C.CustNo = P.CustNo
AND P.PONo = L.PONo
AND P.PONo = 1001;



Get the Total Value of Purchase Orders

SELECT P.PONo, SUM(S.Price * L.Quantity)
FROM PurchaseOrder P,
LineItems L,
Stock_reltab S
WHERE P.PONo = L.PONo
AND L.StockNo = S.StockNo
GROUP BY P.PONo;


Get the Purchase Order and Line Item Data for Stock Item 1004

SELECT P.PONo, P.CustNo,
L.StockNo, L.LineItemNo, L.Quantity, L.Discount
FROM PurchaseOrder P,LineItems L
WHERE P.PONo = L.PONo
AND L.StockNo = 1004;


Updating Data Under the Relational Model. The application can execute statements like these to update the data:

UPDATE LineItems
SET Quantity = 20
WHERE PONo = 1001
AND StockNo = 1534;


Deleting Data Under the Relational Model:

DELETE FROM LineItems WHERE PONo = 1001;

DELETE FROM PurchaseOrder WHERE PONo = 1001;